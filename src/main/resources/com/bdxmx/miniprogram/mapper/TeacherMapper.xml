<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bdxmx.miniprogram.mapper.TeacherMapper" >
    <!--
        This Mapper File generated by MyBatis Generator Extend, Please do not modify it.
    -->
    
    <resultMap id="BaseResultMap" type="com.bdxmx.miniprogram.model.Teacher" >
        <id column="te_id" property="id" jdbcType="INTEGER" />
        <result column="te_account_id" property="accountId" jdbcType="INTEGER" />
        <result column="te_type" property="type" jdbcType="INTEGER" />
        <result column="te_name" property="name" jdbcType="VARCHAR" />
        <result column="te_phone" property="phone" jdbcType="VARCHAR" />
        <result column="te_bindphone" property="bindphone" jdbcType="VARCHAR" />
        <result column="te_email" property="email" jdbcType="VARCHAR" />
        <result column="te_openid" property="openid" jdbcType="VARCHAR" />
        <result column="te_created_at" property="createdAt" jdbcType="TIMESTAMP" />
        <result column="te_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    </resultMap>
    
    <sql id="Base_Column_List" >
        te.id as te_id, te.account_id as te_account_id, te.type as te_type, te.name as te_name, 
        te.phone as te_phone, te.bindphone as te_bindphone, te.email as te_email, te.openid as te_openid, 
        te.created_at as te_created_at, te.updated_at as te_updated_at
    </sql>
    
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from teachers te
        where te.id = #{id,jdbcType=INTEGER}
    </select>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from teachers
        where id = #{id,jdbcType=INTEGER}
    </delete>
    
    <insert id="insert" parameterType="com.bdxmx.miniprogram.model.Teacher" useGeneratedKeys="true" keyProperty="id" >
        insert into teachers (account_id, type, name, 
          phone, bindphone, email, 
          openid, created_at, updated_at
          )
        values (#{accountId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
          #{phone,jdbcType=VARCHAR}, #{bindphone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
          #{openid,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
          )
    </insert>
    
    <insert id="insertSelective" parameterType="com.bdxmx.miniprogram.model.Teacher" useGeneratedKeys="true" keyProperty="id" >
        insert into teachers
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="accountId != null" >
                account_id,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="phone != null" >
                phone,
            </if>
            <if test="bindphone != null" >
                bindphone,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="openid != null" >
                openid,
            </if>
            <if test="createdAt != null" >
                created_at,
            </if>
            <if test="updatedAt != null" >
                updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="accountId != null" >
                #{accountId,jdbcType=INTEGER},
            </if>
            <if test="type != null" >
                #{type,jdbcType=INTEGER},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="bindphone != null" >
                #{bindphone,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="openid != null" >
                #{openid,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null" >
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null" >
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    
    <update id="updateByPrimaryKeySelective" parameterType="com.bdxmx.miniprogram.model.Teacher" >
        update teachers
        <set >
            <if test="accountId != null" >
                account_id = #{accountId,jdbcType=INTEGER},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="bindphone != null" >
                bindphone = #{bindphone,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="openid != null" >
                openid = #{openid,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null" >
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null" >
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <update id="updateByPrimaryKey" parameterType="com.bdxmx.miniprogram.model.Teacher" >
        update teachers
        set account_id = #{accountId,jdbcType=INTEGER},
          type = #{type,jdbcType=INTEGER},
          name = #{name,jdbcType=VARCHAR},
          phone = #{phone,jdbcType=VARCHAR},
          bindphone = #{bindphone,jdbcType=VARCHAR},
          email = #{email,jdbcType=VARCHAR},
          openid = #{openid,jdbcType=VARCHAR},
          created_at = #{createdAt,jdbcType=TIMESTAMP},
          updated_at = #{updatedAt,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <sql id="model_where_clause" >
        <where >
            <if test="model != null" >
                <if test="model.id != null" >
                    and te.id = #{model.id}
                </if>
                <if test="model.accountId != null" >
                    and te.account_id = #{model.accountId}
                </if>
                <if test="model.type != null" >
                    and te.type = #{model.type}
                </if>
                <if test="model.name != null" >
                    and te.name = #{model.name}
                </if>
                <if test="model.phone != null" >
                    and te.phone = #{model.phone}
                </if>
                <if test="model.bindphone != null" >
                    and te.bindphone = #{model.bindphone}
                </if>
                <if test="model.email != null" >
                    and te.email = #{model.email}
                </if>
                <if test="model.openid != null" >
                    and te.openid = #{model.openid}
                </if>
                <if test="model.createdAt != null" >
                    and te.created_at = #{model.createdAt}
                </if>
                <if test="model.updatedAt != null" >
                    and te.updated_at = #{model.updatedAt}
                </if>
            </if>
        </where>
    </sql>
    
    <select id="select" resultMap="BaseResultMap" parameterType="com.bdxmx.miniprogram.model.Teacher" >
        select
        <include refid="Base_Column_List" />
        from teachers te
        <include refid="model_where_clause"/>
        <if test="model == null" >
            where 0 = 1
        </if>
        <if test="model.orderBy != null" >
             order by ${model.orderBy}
        </if>
    </select>
    
    <select id="selectOne" resultMap="BaseResultMap" parameterType="com.bdxmx.miniprogram.model.Teacher" >
        select
        <include refid="Base_Column_List" />
        from teachers te
        <include refid="model_where_clause"/>
        limit 1
    </select>
    
    <select id="selectPageList" resultMap="BaseResultMap" parameterType="com.bdxmx.miniprogram.model.Teacher" >
        select
        <include refid="Base_Column_List" />
        from teachers te
        <include refid="model_where_clause"/>
        <if test="model.orderBy != null" >
             order by ${model.orderBy}
        </if>
    </select>
    
    <select id="selectCount" parameterType="com.bdxmx.miniprogram.model.Teacher" resultType="java.lang.Integer" >
        select count(1) from teachers te
        <include refid="model_where_clause"/>
        <if test="model.orderBy != null" >
             order by ${model.orderBy}
        </if>
    </select>
    
    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id" >
        insert into teachers (
            account_id, type, name, 
            phone, bindphone, email, 
            openid, created_at, updated_at
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
        (
            #{item.accountId}, #{item.type}, #{item.name}, 
            #{item.phone}, #{item.bindphone}, #{item.email}, 
            #{item.openid}, #{item.createdAt}, #{item.updatedAt}
        )
        </foreach>
    </insert>
    
    <delete id="deleteByIds" parameterType="java.util.List" >
        delete from teachers
        where id in
        <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>
    
</mapper>
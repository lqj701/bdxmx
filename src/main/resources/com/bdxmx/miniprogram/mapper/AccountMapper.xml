<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bdxmx.miniprogram.mapper.AccountMapper" >
    <!--
        This Mapper File generated by MyBatis Generator Extend, Please do not modify it.
    -->
    
    <resultMap id="BaseResultMap" type="com.bdxmx.miniprogram.model.Account" >
        <id column="a_id" property="id" jdbcType="INTEGER" />
        <result column="a_phone" property="phone" jdbcType="VARCHAR" />
        <result column="a_name" property="name" jdbcType="VARCHAR" />
        <result column="a_email" property="email" jdbcType="VARCHAR" />
        <result column="a_avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
        <result column="a_gender" property="gender" jdbcType="BIT" />
        <result column="a_encrypted_password" property="encryptedPassword" jdbcType="VARCHAR" />
        <result column="a_usable" property="usable" jdbcType="BIT" />
        <result column="a_created_at" property="createdAt" jdbcType="TIMESTAMP" />
        <result column="a_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    </resultMap>
    
    <sql id="Base_Column_List" >
        a.id as a_id, a.phone as a_phone, a.name as a_name, a.email as a_email, a.avatar_url as a_avatar_url, 
        a.gender as a_gender, a.encrypted_password as a_encrypted_password, a.usable as a_usable, 
        a.created_at as a_created_at, a.updated_at as a_updated_at
    </sql>
    
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from accounts a
        where a.id = #{id,jdbcType=INTEGER}
    </select>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from accounts
        where id = #{id,jdbcType=INTEGER}
    </delete>
    
    <insert id="insert" parameterType="com.bdxmx.miniprogram.model.Account" useGeneratedKeys="true" keyProperty="id" >
        insert into accounts (phone, name, email, 
          avatar_url, gender, encrypted_password, 
          usable, created_at, updated_at
          )
        values (#{phone,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
          #{avatarUrl,jdbcType=VARCHAR}, #{gender,jdbcType=BIT}, #{encryptedPassword,jdbcType=VARCHAR}, 
          #{usable,jdbcType=BIT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
          )
    </insert>
    
    <insert id="insertSelective" parameterType="com.bdxmx.miniprogram.model.Account" useGeneratedKeys="true" keyProperty="id" >
        insert into accounts
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="phone != null" >
                phone,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="avatarUrl != null" >
                avatar_url,
            </if>
            <if test="gender != null" >
                gender,
            </if>
            <if test="encryptedPassword != null" >
                encrypted_password,
            </if>
            <if test="usable != null" >
                usable,
            </if>
            <if test="createdAt != null" >
                created_at,
            </if>
            <if test="updatedAt != null" >
                updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="phone != null" >
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="avatarUrl != null" >
                #{avatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="gender != null" >
                #{gender,jdbcType=BIT},
            </if>
            <if test="encryptedPassword != null" >
                #{encryptedPassword,jdbcType=VARCHAR},
            </if>
            <if test="usable != null" >
                #{usable,jdbcType=BIT},
            </if>
            <if test="createdAt != null" >
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null" >
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    
    <update id="updateByPrimaryKeySelective" parameterType="com.bdxmx.miniprogram.model.Account" >
        update accounts
        <set >
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="avatarUrl != null" >
                avatar_url = #{avatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="gender != null" >
                gender = #{gender,jdbcType=BIT},
            </if>
            <if test="encryptedPassword != null" >
                encrypted_password = #{encryptedPassword,jdbcType=VARCHAR},
            </if>
            <if test="usable != null" >
                usable = #{usable,jdbcType=BIT},
            </if>
            <if test="createdAt != null" >
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null" >
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <update id="updateByPrimaryKey" parameterType="com.bdxmx.miniprogram.model.Account" >
        update accounts
        set phone = #{phone,jdbcType=VARCHAR},
          name = #{name,jdbcType=VARCHAR},
          email = #{email,jdbcType=VARCHAR},
          avatar_url = #{avatarUrl,jdbcType=VARCHAR},
          gender = #{gender,jdbcType=BIT},
          encrypted_password = #{encryptedPassword,jdbcType=VARCHAR},
          usable = #{usable,jdbcType=BIT},
          created_at = #{createdAt,jdbcType=TIMESTAMP},
          updated_at = #{updatedAt,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <sql id="model_where_clause" >
        <where >
            <if test="model != null" >
                <if test="model.id != null" >
                    and a.id = #{model.id}
                </if>
                <if test="model.phone != null" >
                    and a.phone = #{model.phone}
                </if>
                <if test="model.name != null" >
                    and a.name = #{model.name}
                </if>
                <if test="model.email != null" >
                    and a.email = #{model.email}
                </if>
                <if test="model.avatarUrl != null" >
                    and a.avatar_url = #{model.avatarUrl}
                </if>
                <if test="model.gender != null" >
                    and a.gender = #{model.gender}
                </if>
                <if test="model.encryptedPassword != null" >
                    and a.encrypted_password = #{model.encryptedPassword}
                </if>
                <if test="model.usable != null" >
                    and a.usable = #{model.usable}
                </if>
                <if test="model.createdAt != null" >
                    and a.created_at = #{model.createdAt}
                </if>
                <if test="model.updatedAt != null" >
                    and a.updated_at = #{model.updatedAt}
                </if>
            </if>
        </where>
    </sql>
    
    <select id="select" resultMap="BaseResultMap" parameterType="com.bdxmx.miniprogram.model.Account" >
        select
        <include refid="Base_Column_List" />
        from accounts a
        <include refid="model_where_clause"/>
        <if test="model == null" >
            where 0 = 1
        </if>
        <if test="model.orderBy != null" >
             order by ${model.orderBy}
        </if>
    </select>
    
    <select id="selectOne" resultMap="BaseResultMap" parameterType="com.bdxmx.miniprogram.model.Account" >
        select
        <include refid="Base_Column_List" />
        from accounts a
        <include refid="model_where_clause"/>
        limit 1
    </select>
    
    <select id="selectPageList" resultMap="BaseResultMap" parameterType="com.bdxmx.miniprogram.model.Account" >
        select
        <include refid="Base_Column_List" />
        from accounts a
        <include refid="model_where_clause"/>
        <if test="model.orderBy != null" >
             order by ${model.orderBy}
        </if>
    </select>
    
    <select id="selectCount" parameterType="com.bdxmx.miniprogram.model.Account" resultType="java.lang.Integer" >
        select count(1) from accounts a
        <include refid="model_where_clause"/>
        <if test="model.orderBy != null" >
             order by ${model.orderBy}
        </if>
    </select>
    
    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id" >
        insert into accounts (
            phone, name, email, 
            avatar_url, gender, encrypted_password, 
            usable, created_at, updated_at
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
        (
            #{item.phone}, #{item.name}, #{item.email}, 
            #{item.avatarUrl}, #{item.gender}, #{item.encryptedPassword}, 
            #{item.usable}, #{item.createdAt}, #{item.updatedAt}
        )
        </foreach>
    </insert>
    
    <delete id="deleteByIds" parameterType="java.util.List" >
        delete from accounts
        where id in
        <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>
    
</mapper>
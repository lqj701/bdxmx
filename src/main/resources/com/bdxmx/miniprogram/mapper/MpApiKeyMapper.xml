<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bdxmx.miniprogram.mapper.MpApiKeyMapper" >
    <!--
        This Mapper File generated by MyBatis Generator Extend, Please do not modify it.
    -->
    
    <resultMap id="BaseResultMap" type="com.bdxmx.miniprogram.model.MpApiKey" >
        <id column="mak_id" property="id" jdbcType="INTEGER" />
        <result column="mak_user_id" property="userId" jdbcType="INTEGER" />
        <result column="mak_access_token" property="accessToken" jdbcType="VARCHAR" />
        <result column="mak_created_at" property="createdAt" jdbcType="TIMESTAMP" />
        <result column="mak_updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    </resultMap>
    
    <sql id="Base_Column_List" >
        mak.id as mak_id, mak.user_id as mak_user_id, mak.access_token as mak_access_token, 
        mak.created_at as mak_created_at, mak.updated_at as mak_updated_at
    </sql>
    
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from mp_api_keys mak
        where mak.id = #{id,jdbcType=INTEGER}
    </select>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from mp_api_keys
        where id = #{id,jdbcType=INTEGER}
    </delete>
    
    <insert id="insert" parameterType="com.bdxmx.miniprogram.model.MpApiKey" useGeneratedKeys="true" keyProperty="id" >
        insert into mp_api_keys (user_id, access_token, created_at, 
          updated_at)
        values (#{userId,jdbcType=INTEGER}, #{accessToken,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
          #{updatedAt,jdbcType=TIMESTAMP})
    </insert>
    
    <insert id="insertSelective" parameterType="com.bdxmx.miniprogram.model.MpApiKey" useGeneratedKeys="true" keyProperty="id" >
        insert into mp_api_keys
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                user_id,
            </if>
            <if test="accessToken != null" >
                access_token,
            </if>
            <if test="createdAt != null" >
                created_at,
            </if>
            <if test="updatedAt != null" >
                updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="accessToken != null" >
                #{accessToken,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null" >
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null" >
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    
    <update id="updateByPrimaryKeySelective" parameterType="com.bdxmx.miniprogram.model.MpApiKey" >
        update mp_api_keys
        <set >
            <if test="userId != null" >
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="accessToken != null" >
                access_token = #{accessToken,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null" >
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null" >
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <update id="updateByPrimaryKey" parameterType="com.bdxmx.miniprogram.model.MpApiKey" >
        update mp_api_keys
        set user_id = #{userId,jdbcType=INTEGER},
          access_token = #{accessToken,jdbcType=VARCHAR},
          created_at = #{createdAt,jdbcType=TIMESTAMP},
          updated_at = #{updatedAt,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <sql id="model_where_clause" >
        <where >
            <if test="model != null" >
                <if test="model.id != null" >
                    and mak.id = #{model.id}
                </if>
                <if test="model.userId != null" >
                    and mak.user_id = #{model.userId}
                </if>
                <if test="model.accessToken != null" >
                    and mak.access_token = #{model.accessToken}
                </if>
                <if test="model.createdAt != null" >
                    and mak.created_at = #{model.createdAt}
                </if>
                <if test="model.updatedAt != null" >
                    and mak.updated_at = #{model.updatedAt}
                </if>
            </if>
        </where>
    </sql>
    
    <select id="select" resultMap="BaseResultMap" parameterType="com.bdxmx.miniprogram.model.MpApiKey" >
        select
        <include refid="Base_Column_List" />
        from mp_api_keys mak
        <include refid="model_where_clause"/>
        <if test="model == null" >
            where 0 = 1
        </if>
        <if test="model.orderBy != null" >
             order by ${model.orderBy}
        </if>
    </select>
    
    <select id="selectOne" resultMap="BaseResultMap" parameterType="com.bdxmx.miniprogram.model.MpApiKey" >
        select
        <include refid="Base_Column_List" />
        from mp_api_keys mak
        <include refid="model_where_clause"/>
        limit 1
    </select>
    
    <select id="selectPageList" resultMap="BaseResultMap" parameterType="com.bdxmx.miniprogram.model.MpApiKey" >
        select
        <include refid="Base_Column_List" />
        from mp_api_keys mak
        <include refid="model_where_clause"/>
        <if test="model.orderBy != null" >
             order by ${model.orderBy}
        </if>
    </select>
    
    <select id="selectCount" parameterType="com.bdxmx.miniprogram.model.MpApiKey" resultType="java.lang.Integer" >
        select count(1) from mp_api_keys mak
        <include refid="model_where_clause"/>
        <if test="model.orderBy != null" >
             order by ${model.orderBy}
        </if>
    </select>
    
    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id" >
        insert into mp_api_keys (
            user_id, access_token, created_at, 
            updated_at
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
        (
            #{item.userId}, #{item.accessToken}, #{item.createdAt}, 
            #{item.updatedAt}
        )
        </foreach>
    </insert>
    
    <delete id="deleteByIds" parameterType="java.util.List" >
        delete from mp_api_keys
        where id in
        <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>
    
</mapper>
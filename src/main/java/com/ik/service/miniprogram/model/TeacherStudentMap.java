package com.ik.service.miniprogram.model;

import java.io.Serializable;
import java.util.Date;
import org.mybatis.extend.generic.model.BaseModel;

/**
 * Model: TeacherStudentMap
 * Table: teacher_student_map
 * Alias: tsm
 *
 * This Model generated by MyBatis Generator Extend.
 */
public class TeacherStudentMap extends BaseModel<Integer> implements Serializable {
    /**
     * 老师ID
     * teacher_id
     */
    private Integer teacherId;

    /**
     * 学生ID
     * student_id
     */
    private Integer studentId;

    /**
     * 创建时间
     * created_at
     */
    private Date createdAt;

    /**
     * 更新时间
     * updated_at
     */
    private Date updatedAt;

    private static final long serialVersionUID = 1L;

    /**
     * 老师ID
     * teacher_id
     */
    public Integer getTeacherId() {
        return teacherId;
    }

    /**
     * 老师ID
     * teacher_id
     *
     * @param teacherId 老师ID
     */
    public void setTeacherId(Integer teacherId) {
        this.teacherId = teacherId;
    }

    /**
     * 学生ID
     * student_id
     */
    public Integer getStudentId() {
        return studentId;
    }

    /**
     * 学生ID
     * student_id
     *
     * @param studentId 学生ID
     */
    public void setStudentId(Integer studentId) {
        this.studentId = studentId;
    }

    /**
     * 创建时间
     * created_at
     */
    public Date getCreatedAt() {
        return createdAt;
    }

    /**
     * 创建时间
     * created_at
     *
     * @param createdAt 创建时间
     */
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * 更新时间
     * updated_at
     */
    public Date getUpdatedAt() {
        return updatedAt;
    }

    /**
     * 更新时间
     * updated_at
     *
     * @param updatedAt 更新时间
     */
    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", teacherId=").append(teacherId);
        sb.append(", studentId=").append(studentId);
        sb.append(", createdAt=").append(createdAt);
        sb.append(", updatedAt=").append(updatedAt);
        sb.append("]");
        return sb.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        TeacherStudentMap other = (TeacherStudentMap) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        return result;
    }
}
package com.ik.service.miniprogram.service.impl;

import java.util.Date;
import java.util.List;

import org.assertj.core.util.Lists;
import org.mybatis.extend.generic.service.impl.GenericServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.alibaba.fastjson.JSONObject;
import com.ik.service.miniprogram.mapper.ExamPaperMapper;
import com.ik.service.miniprogram.model.ExamPaper;
import com.ik.service.miniprogram.model.Question;
import com.ik.service.miniprogram.service.ExamPaperService;
import com.ik.service.miniprogram.service.QuestionService;
import com.ik.service.miniprogram.service.TeacherService;

/**
 * ServiceImpl: ExamPaperServiceImpl
 * Mapper : ExamPaperMapper
 * Model  : ExamPaper
 *
 * This ServiceImpl generated by MyBatis Generator Extend at 2018-12-04 10:26:51
 */
@Service
@Transactional
public class ExamPaperServiceImpl extends GenericServiceImpl<ExamPaper, Integer, ExamPaperMapper>
        implements ExamPaperService {
    @Autowired
    private ExamPaperMapper examPaperMapper;
    @Autowired
    private TeacherService teacherService;
    @Autowired
    private QuestionService questionService;

    @Override
    public ExamPaperMapper getGenericMapper() {
        return examPaperMapper;
    }

    @Override
    public ExamPaper saveExamPaper(Integer paperType, String name, Integer teacherId, String questionIds,
                                   Integer totalScore) {
        ExamPaper examPaper = new ExamPaper();
        examPaper.setPaperType(paperType);
        examPaper.setName(name);
        examPaper.setSetPerson(teacherService.selectByPrimaryKey(teacherId).getName());
        examPaper.setQuestionIds(questionIds);
        examPaper.setTotalScores(totalScore);
        examPaper.setCreatedAt(new Date());
        examPaper.setUpdatedAt(new Date());
        examPaperMapper.insertSelective(examPaper);

        return examPaper;
    }

    @Override
    public ExamPaper updateExamPaper(Integer examPaperId, Integer paperType, String name, String questionIds,
            Integer totalScore) {
        ExamPaper examPaper = examPaperMapper.selectByPrimaryKey(examPaperId);
        if (null == examPaper) {
            return null;
        }
        examPaper.setName(name);
        examPaper.setQuestionIds(questionIds);
        examPaper.setTotalScores(totalScore);
        examPaperMapper.updateByPrimaryKeySelective(examPaper);
        return examPaper;
    }

    @Override
    public JSONObject getPaper(Integer examPaperId) {
        ExamPaper examPaper = examPaperMapper.selectByPrimaryKey(examPaperId);
        if (null == examPaper) {
            return null;
        }
        JSONObject data = new JSONObject();
        String questionIds = examPaper.getQuestionIds();
        String[] temp = questionIds.substring(0, questionIds.length() - 1).split(",");
        List<Question> questionList = Lists.newArrayList();
        for (int i = 0; i < temp.length; i++) {
            questionList.add(questionService.selectByPrimaryKey(Integer.parseInt(temp[i])));
        }
        data.put("examPaper", examPaper);
        data.put("questionIdList", questionList);

        return data;
    }

}
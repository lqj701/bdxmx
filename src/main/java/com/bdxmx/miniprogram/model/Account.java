package com.bdxmx.miniprogram.model;

import java.io.Serializable;
import java.util.Date;
import org.mybatis.extend.generic.model.BaseModel;

/**
 * Model: Account
 * Table: accounts
 * Alias: a
 *
 * This Model generated by MyBatis Generator Extend.
 */
public class Account extends BaseModel<Integer> implements Serializable {
    /**
     * 手机号
     * phone
     */
    private String phone;

    /**
     * 账户名称
     * name
     */
    private String name;

    /**
     * 邮箱
     * email
     */
    private String email;

    /**
     * 头像URL
     * avatar_url
     */
    private String avatarUrl;

    /**
     * 性别 0：男；1：女
     * gender
     */
    private Boolean gender;

    /**
     * 密码
     * encrypted_password
     */
    private String encryptedPassword;

    /**
     * 是否可用 0：不可用；1：可用
     * usable
     */
    private Boolean usable;

    /**
     * 创建时间
     * created_at
     */
    private Date createdAt;

    /**
     * 更新时间
     * updated_at
     */
    private Date updatedAt;

    private static final long serialVersionUID = 1L;

    /**
     * 手机号
     * phone
     */
    public String getPhone() {
        return phone;
    }

    /**
     * 手机号
     * phone
     *
     * @param phone 手机号
     */
    public void setPhone(String phone) {
        this.phone = phone;
    }

    /**
     * 账户名称
     * name
     */
    public String getName() {
        return name;
    }

    /**
     * 账户名称
     * name
     *
     * @param name 账户名称
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * 邮箱
     * email
     */
    public String getEmail() {
        return email;
    }

    /**
     * 邮箱
     * email
     *
     * @param email 邮箱
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * 头像URL
     * avatar_url
     */
    public String getAvatarUrl() {
        return avatarUrl;
    }

    /**
     * 头像URL
     * avatar_url
     *
     * @param avatarUrl 头像URL
     */
    public void setAvatarUrl(String avatarUrl) {
        this.avatarUrl = avatarUrl;
    }

    /**
     * 性别 0：男；1：女
     * gender
     */
    public Boolean getGender() {
        return gender;
    }

    /**
     * 性别 0：男；1：女
     * gender
     *
     * @param gender 性别 0：男；1：女
     */
    public void setGender(Boolean gender) {
        this.gender = gender;
    }

    /**
     * 密码
     * encrypted_password
     */
    public String getEncryptedPassword() {
        return encryptedPassword;
    }

    /**
     * 密码
     * encrypted_password
     *
     * @param encryptedPassword 密码
     */
    public void setEncryptedPassword(String encryptedPassword) {
        this.encryptedPassword = encryptedPassword;
    }

    /**
     * 是否可用 0：不可用；1：可用
     * usable
     */
    public Boolean getUsable() {
        return usable;
    }

    /**
     * 是否可用 0：不可用；1：可用
     * usable
     *
     * @param usable 是否可用 0：不可用；1：可用
     */
    public void setUsable(Boolean usable) {
        this.usable = usable;
    }

    /**
     * 创建时间
     * created_at
     */
    public Date getCreatedAt() {
        return createdAt;
    }

    /**
     * 创建时间
     * created_at
     *
     * @param createdAt 创建时间
     */
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * 更新时间
     * updated_at
     */
    public Date getUpdatedAt() {
        return updatedAt;
    }

    /**
     * 更新时间
     * updated_at
     *
     * @param updatedAt 更新时间
     */
    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", phone=").append(phone);
        sb.append(", name=").append(name);
        sb.append(", email=").append(email);
        sb.append(", avatarUrl=").append(avatarUrl);
        sb.append(", gender=").append(gender);
        sb.append(", encryptedPassword=").append(encryptedPassword);
        sb.append(", usable=").append(usable);
        sb.append(", createdAt=").append(createdAt);
        sb.append(", updatedAt=").append(updatedAt);
        sb.append("]");
        return sb.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        Account other = (Account) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        return result;
    }
}